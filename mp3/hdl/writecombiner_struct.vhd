-- VHDL Entity ece411.WriteCombiner.interface
--
-- Created:
--          by - jconroy2.stdt (eelnx39.ews.illinois.edu)
--          at - 20:57:46 10/18/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY WriteCombiner IS
   PORT( 
      ADDRoffset : IN     LC3B_cacheoffset;
      DATAOUT    : IN     LC3b_word;
      MWRITEH_L  : IN     std_logic;
      MWRITEL_L  : IN     std_logic;
      WAY_DATA   : IN     lc3b_oword;
      clk        : IN     std_logic;
      WCDATA     : OUT    LC3B_oword
   );

-- Declarations

END WriteCombiner ;

--
-- VHDL Architecture ece411.WriteCombiner.struct
--
-- Created:
--          by - jconroy2.stdt (eelnx39.ews.illinois.edu)
--          at - 20:57:46 10/18/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;

ARCHITECTURE struct OF WriteCombiner IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL Sel1           : std_logic;
   SIGNAL Sel2           : std_logic;
   SIGNAL Sel3           : std_logic;
   SIGNAL Sel4           : std_logic;
   SIGNAL Sel5           : std_logic;
   SIGNAL Sel6           : std_logic;
   SIGNAL Sel7           : std_logic;
   SIGNAL WTout1         : LC3B_word;
   SIGNAL WTout2         : LC3B_word;
   SIGNAL WTout3         : LC3B_word;
   SIGNAL WTout4         : LC3B_word;
   SIGNAL WTout5         : LC3B_word;
   SIGNAL WTout6         : LC3B_word;
   SIGNAL WTout7         : LC3B_word;
   SIGNAL WTout8         : LC3B_word;
   SIGNAL oWordSplitout1 : LC3B_Word;
   SIGNAL oWordSplitout2 : LC3B_Word;
   SIGNAL oWordSplitout3 : LC3B_Word;
   SIGNAL oWordSplitout4 : LC3B_Word;
   SIGNAL oWordSplitout5 : LC3B_Word;
   SIGNAL oWordSplitout6 : LC3B_Word;
   SIGNAL oWordSplitout7 : LC3B_Word;
   SIGNAL oWordSplitout8 : LC3B_Word;
   SIGNAL sel8           : std_logic;


   -- Component Declarations
   COMPONENT Decode8
   PORT (
      ADDRoffset : IN     LC3B_cacheoffset ;
      clk        : IN     std_logic ;
      Sel1       : OUT    std_logic ;
      Sel2       : OUT    std_logic ;
      Sel3       : OUT    std_logic ;
      Sel4       : OUT    std_logic ;
      Sel5       : OUT    std_logic ;
      Sel6       : OUT    std_logic ;
      Sel7       : OUT    std_logic ;
      sel8       : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT Line_Joiner
   PORT (
      WTout1 : IN     LC3B_word ;
      WTout2 : IN     LC3B_word ;
      WTout3 : IN     LC3B_word ;
      WTout4 : IN     LC3B_word ;
      WTout5 : IN     LC3B_word ;
      WTout6 : IN     LC3B_word ;
      WTout7 : IN     LC3B_word ;
      WTout8 : IN     LC3B_word ;
      clk    : IN     std_logic ;
      WCDATA : OUT    LC3B_oword 
   );
   END COMPONENT;
   COMPONENT WT
   PORT (
      LineData : IN     LC3B_word ;
      MWH      : IN     std_logic ;
      MWL      : IN     std_logic ;
      Sel      : IN     std_logic ;
      dataout  : IN     LC3B_word ;
      WTout    : OUT    LC3B_word 
   );
   END COMPONENT;
   COMPONENT oWordSplit
   PORT (
      clk            : IN     std_logic;
      oWordSplitIn   : IN     lc3b_oword;
      oWordSplitout1 : OUT    LC3B_Word;
      oWordSplitout2 : OUT    LC3B_Word;
      oWordSplitout3 : OUT    LC3B_Word;
      oWordSplitout4 : OUT    LC3B_Word;
      oWordSplitout5 : OUT    LC3B_Word;
      oWordSplitout6 : OUT    LC3B_Word;
      oWordSplitout7 : OUT    LC3B_Word;
      oWordSplitout8 : OUT    LC3B_Word
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : Decode8 USE ENTITY ece411.Decode8;
   FOR ALL : Line_Joiner USE ENTITY ece411.Line_Joiner;
   FOR ALL : WT USE ENTITY ece411.WT;
   FOR ALL : oWordSplit USE ENTITY ece411.oWordSplit;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   Dec8 : Decode8
      PORT MAP (
         ADDRoffset => ADDRoffset,
         clk        => clk,
         Sel1       => Sel1,
         Sel2       => Sel2,
         Sel3       => Sel3,
         Sel4       => Sel4,
         Sel5       => Sel5,
         Sel6       => Sel6,
         Sel7       => Sel7,
         sel8       => sel8
      );
   aLine_Join : Line_Joiner
      PORT MAP (
         WTout1 => WTout1,
         WTout2 => WTout2,
         WTout3 => WTout3,
         WTout4 => WTout4,
         WTout5 => WTout5,
         WTout6 => WTout6,
         WTout7 => WTout7,
         WTout8 => WTout8,
         clk    => clk,
         WCDATA => WCDATA
      );
   WT1 : WT
      PORT MAP (
         LineData => oWordSplitout1,
         MWH      => MWRITEH_L,
         MWL      => MWRITEL_L,
         Sel      => Sel1,
         dataout  => DATAOUT,
         WTout    => WTout1
      );
   WT2 : WT
      PORT MAP (
         LineData => oWordSplitout2,
         MWH      => MWRITEH_L,
         MWL      => MWRITEL_L,
         Sel      => Sel2,
         dataout  => DATAOUT,
         WTout    => WTout2
      );
   WT3 : WT
      PORT MAP (
         LineData => oWordSplitout3,
         MWH      => MWRITEH_L,
         MWL      => MWRITEL_L,
         Sel      => Sel3,
         dataout  => DATAOUT,
         WTout    => WTout3
      );
   WT4 : WT
      PORT MAP (
         LineData => oWordSplitout4,
         MWH      => MWRITEH_L,
         MWL      => MWRITEL_L,
         Sel      => Sel4,
         dataout  => DATAOUT,
         WTout    => WTout4
      );
   WT5 : WT
      PORT MAP (
         LineData => oWordSplitout5,
         MWH      => MWRITEH_L,
         MWL      => MWRITEL_L,
         Sel      => Sel5,
         dataout  => DATAOUT,
         WTout    => WTout5
      );
   WT6 : WT
      PORT MAP (
         LineData => oWordSplitout6,
         MWH      => MWRITEH_L,
         MWL      => MWRITEL_L,
         Sel      => Sel6,
         dataout  => DATAOUT,
         WTout    => WTout6
      );
   WT7 : WT
      PORT MAP (
         LineData => oWordSplitout7,
         MWH      => MWRITEH_L,
         MWL      => MWRITEL_L,
         Sel      => Sel7,
         dataout  => DATAOUT,
         WTout    => WTout7
      );
   WT8 : WT
      PORT MAP (
         LineData => oWordSplitout8,
         MWH      => MWRITEH_L,
         MWL      => MWRITEL_L,
         Sel      => sel8,
         dataout  => DATAOUT,
         WTout    => WTout8
      );
   WAY_WordSplit : oWordSplit
      PORT MAP (
         clk            => clk,
         oWordSplitIn   => WAY_DATA,
         oWordSplitout1 => oWordSplitout1,
         oWordSplitout2 => oWordSplitout2,
         oWordSplitout3 => oWordSplitout3,
         oWordSplitout4 => oWordSplitout4,
         oWordSplitout5 => oWordSplitout5,
         oWordSplitout6 => oWordSplitout6,
         oWordSplitout7 => oWordSplitout7,
         oWordSplitout8 => oWordSplitout8
      );

END struct;
